import { Asteroid } from '../interfaces';
import { solveMap } from '../solve-map';

describe('Day 10, solve map tests', () => {
  const solution = (x: number, y: number, connections: number): Asteroid => ({ x, y, connections });

  const testMap = (map: string, x: number, y: number, connections: number) => {
    expect(solveMap(map)).toEqual(solution(x, y, connections));
  };

  test('Test 1', () => {
    const map = `
      .#..#
      .....
      #####
      ....#
      ...##`;

    testMap(map, 3, 4, 8);
  });

  test('Test 2', () => {
    const map = `
      ......#.#.
      #..#.#....
      ..#######.
      .#.#.###..
      .#..#.....
      ..#....#.#
      #..#....#.
      .##.#..###
      ##...#..#.
      .#....####`;

    testMap(map, 5, 8, 33);
  });

  test('Test 3', () => {
    const map = `
      #.#...#.#.
      .###....#.
      .#....#...
      ##.#.#.#.#
      ....#.#.#.
      .##..###.#
      ..#...##..
      ..##....##
      ......#...
      .####.###.`;

    testMap(map, 1, 2, 35);
  });

  test('Test 4', () => {
    const map = `
      .#..#..###
      ####.###.#
      ....###.#.
      ..###.##.#
      ##.##.#.#.
      ....###..#
      ..#.#..#.#
      #..#.#.###
      .##...##.#
      .....#.#..`;

    testMap(map, 6, 3, 41);
  });

  test('Test 5', () => {
    const map = `
      .#..##.###...#######
      ##.############..##.
      .#.######.########.#
      .###.#######.####.#.
      #####.##.#.##.###.##
      ..#####..#.#########
      ####################
      #.####....###.#.#.##
      ##.#################
      #####.##.###..####..
      ..######..##.#######
      ####.##.####...##..#
      .#####..#.######.###
      ##...#.##########...
      #.##########.#######
      .####.#.###.###.#.##
      ....##.##.###..#####
      .#.#.###########.###
      #.#.#.#####.####.###
      ###.##.####.##.#..##`;

    testMap(map, 11, 13, 210);
  });
});
